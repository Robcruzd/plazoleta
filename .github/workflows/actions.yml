#name: Java CI with Gradle and Docker
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#env:
#  AWS_REGION: us-east-1
#  AWS_ACCOUNT_ID: 680989793215
#  IMAGE_NAME: plazoleta
#  EB_APPLICATION_NAME: plazoleta
#  EB_ENVIRONMENT_NAME: Plazoleta-env
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: 11
#          distribution: 'adopt'
#
#      - name: Build with Gradle
#        run: |
#          ./gradlew build --no-daemon
#
#      - name: Run tests and generate coverage report
#        run: ./gradlew test jacocoTestReport sonar --no-daemon
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: Login to AWS ECR
#        uses: aws-actions/amazon-ecr-login@v1
#        with:
#          registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
#          region: ${{ env.AWS_REGION }}
#
#      - name: Build and tag Docker image
#        run: |
#          docker build -t $IMAGE_NAME .
#          docker tag $IMAGE_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME
#
#      - name: Push Docker image to ECR
#        run: |
#          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME
#
#      - name: Upload Dockerrun.aws.json to S3
#        run: aws s3 cp Dockerrun.aws.json s3://elasticbeanstalk-us-east-1-${{ env.AWS_ACCOUNT_ID }}/${{ github.sha }}-Dockerrun.aws.json
#
#      - name: Deploy to Elastic Beanstalk
#        run: |
#          aws elasticbeanstalk create-application-version --application-name ${{ env.EB_APPLICATION_NAME }} --version-label ${{ github.sha }} --source-bundle S3Bucket=elasticbeanstalk-us-east-1-${{ env.AWS_ACCOUNT_ID }},S3Key=${{ github.sha }}-Dockerrun.aws.json
#          aws elasticbeanstalk update-environment --application-name ${{ env.EB_APPLICATION_NAME }} --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label ${{ github.sha }}
#
#      - name: Send Google Chat notification on failure
#        if: failure()
#        run: |
#          curl -X POST -H 'Content-Type: application/json' -d '{
#            "text": "El pipeline de GitHub Actions ha fallado. Consulta los detalles en el enlace: ${{ github.workflow }} - ${{ github.run_number }} - ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#          }' https://chat.googleapis.com/v1/spaces/AAAAQ7_X6JE/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=c6im4d8klurn7w6M8Cn_DJ9gz52v7zTOjfpwqfvpKfU
#
